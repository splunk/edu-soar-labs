{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "customCode": null,
            "description": "This is the example playbook developed in section 2 of the using prompts course. It uses the playbook run owner as the prompt recipient. Test run in the debugger or run manually from an event. ",
            "edges": [
                {
                    "id": "port_0_to_port_5",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_5_to_port_8",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_8_to_port_10",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_16_to_port_17",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_8_to_port_16",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_17_to_port_18",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_17_to_port_20",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_17_to_port_21",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                }
            ],
            "hash": "23159ca3ed91228e26debd54a6a157e54ea2f6a8",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 640,
                    "y": 379.99999999999983
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1200,
                    "y": 1340
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Escalate",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "escalate",
                        "id": "10",
                        "inputParameters": [],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "code",
                    "warnings": {},
                    "x": 860,
                    "y": 740
                },
                "16": {
                    "data": {
                        "advanced": {
                            "customName": "Set Severity",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "set_severity",
                        "id": "16",
                        "inputParameters": [
                            "review_incident:action_result.summary.responses.0"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(review_incident_summary_responses_0)\n    phantom.set_severity(container, review_incident_summary_responses_0[0])\n\n",
                    "warnings": {},
                    "x": 620,
                    "y": 840
                },
                "17": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "review_incident:action_result.summary.responses.1",
                                        "value": "Monitor for new activity"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Monitor",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "review_incident:action_result.summary.responses.1",
                                        "value": "Duplicate, cancel"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "Cancel",
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 2,
                                "customName": "Escalate",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "decision_3",
                        "id": "17",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "decision",
                    "warnings": {},
                    "x": 700,
                    "y": 940
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "Monitor",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "monitor",
                        "id": "18",
                        "inputParameters": [],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "code",
                    "warnings": {},
                    "x": 840,
                    "y": 1100
                },
                "20": {
                    "data": {
                        "advanced": {
                            "customName": "Escalate",
                            "customNameId": 1,
                            "join": []
                        },
                        "functionId": 8,
                        "functionName": "escalate_1",
                        "id": "20",
                        "inputParameters": [],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "code",
                    "warnings": {},
                    "x": 400,
                    "y": 1100
                },
                "21": {
                    "data": {
                        "advanced": {
                            "customName": "Close",
                            "customNameId": 0,
                            "join": [],
                            "refreshNotableData": true
                        },
                        "functionId": 5,
                        "functionName": "close",
                        "id": "21",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "closed"
                            }
                        }
                    },
                    "errors": {},
                    "id": "21",
                    "type": "utility",
                    "warnings": {},
                    "x": 620,
                    "y": 1220
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "Review incident",
                            "customNameId": 0,
                            "join": []
                        },
                        "approver": {
                            "type": "user",
                            "value": "launching_user"
                        },
                        "functionId": 4,
                        "functionName": "review_incident",
                        "id": "5",
                        "message": "Please review this new event in SOAR and determine the severity and disposition.\nThe current event severity is {0}",
                        "parameters": [
                            "container:severity"
                        ],
                        "responseTime": 10,
                        "responses": [
                            {
                                "required": true,
                                "responseOptions": [
                                    "Low",
                                    "Medium",
                                    "High"
                                ],
                                "responsePrompt": "What should the severity for this event be set to?",
                                "responseType": "customList"
                            },
                            {
                                "required": true,
                                "responseOptions": [
                                    "Monitor for new activity",
                                    "Duplicate, cancel",
                                    "Escalate to priority response team"
                                ],
                                "responsePrompt": "What disposition action should be executed?",
                                "responseType": "customList"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "prompt",
                    "warnings": {},
                    "x": 620,
                    "y": 460
                },
                "8": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "review_incident:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "No Response",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "Response",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "8",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "decision",
                    "warnings": {},
                    "x": 700,
                    "y": 580
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 168,
                "playbook_name": "prompt",
                "playbook_repo_id": 2,
                "playbook_repo_name": "local"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_trigger": "artifact_created",
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.15",
        "version": "6.3.1.178"
    },
    "create_time": "2024-12-04T23:38:50.743352+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}